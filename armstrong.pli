/* PL/I Program to Check Armstrong Number */

armstrong: procedure options(main);
   /* Declare variables */
   declare num fixed binary(31);
   declare originalNum fixed binary(31);
   declare remainder fixed binary(31);
   declare result fixed binary(31);
   declare n fixed binary(31);
   declare power fixed binary(31);

   /* Prompt user for input */
   put list('Enter a number to check if it is an Armstrong number: ');
   get list(num);

   /* Initialize variables */
   originalNum = num;
   result = 0;

   /* Count the number of digits in the number */
   n = 0;
   declare tempNum fixed binary(31);
   tempNum = num;
   do while (tempNum > 0);
      n = n + 1;
      tempNum = tempNum / 10;
   end;

   /* Calculate the Armstrong number */
   do while (num > 0);
      remainder = num mod 10;
      power = 1;
      declare i fixed binary(31);
      do i = 1 to n;
         power = power * remainder;
      end;
      result = result + power;
      num = num / 10;
   end;

   /* Check if the result is equal to the original number */
   if result = originalNum then
      put list(originalNum, ' is an Armstrong number.');
   else
      put list(originalNum, ' is not an Armstrong number.');

end armstrong;
